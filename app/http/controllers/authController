// all the logics of every request will come here in this file
const User = require('../../models/user')
const bcrypt = require('bcrypt')
const passport = require('passport')
function authController(){
    const _getRedirectUrl = (req) => {
        return req.user.role === 'admin' ? '/admin/orders' : '/customer/orders'
    }
    return {
        login(req,res){
            res.render('auth/login')
        },
        postLogin(req,res,next){
            const {email, password} = req.body
            // validate request
            if(!email || !password){
                req.flash('error','All fields are required')
                return res.redirect('/login')
            }
            passport.authenticate('local',(err,user,info) =>{
                if(err){
                    req.flash('error',info.message)
                    return next(err)
                }
                if(!user){
                    req.flash('error',info.message)
                    return res.redirect('/login')
                }
                req.logIn(user, (err) =>{
                    if(err){
                        req.flash('error',info.message)
                        return next(err)
                    }

                    return res.redirect(_getRedirectUrl(req)) // here we are finding whether the user is admin or user
                })
            })(req,res,next)
        },
        register(req,res){
            res.render('auth/register')
        },
        async postRegister(req, res){
            const {name, email, password} = req.body
            // validate request
            if(!name || !email || !password){
                req.flash('error','All fields are required')
                // sending the data so that after refreshing the site data does not get erased
                req.flash('name',name)
                req.flash('email',email)
                return res.redirect('/register')
            }

            // check if email already exists
            User.exists({email: email}, (err,result) =>{
                if(result){
                    req.flash('error','Email already exists')
                    req.flash('name',name)
                    req.flash('email',email) 
                    return res.redirect('/register')
                }
            })
            // hash password
            const hashedPassword = await bcrypt.hash(password,10)

            // Create a user

            const user = new User({
                name, // here written like this since the name and key were same
                email,
                password: hashedPassword
            })

            user.save().then((user) =>{
                // registration completed
                // after registration user has to automatically logged in

                return res.redirect('/')
            }).catch(err => {
                req.flash('error','Something Went Wrong')
                return res.redirect('/register')
            })
        },
        logout(req,res){
            req.logout(function(err) { // here we are logging out the session from passport
                if (err) { return next(err); }
                return res.redirect('/login')
              });
        }
    }
}
module.exports = authController